version: "3.4"
services:
  users-pg:
    container_name: users-pg
    image: postgres:15
    user: postgres
    hostname: "${USER_DB_HOSTNAME}"
    ports:
      - "${USER_DB_PORT}:${USER_DB_PORT}"
    volumes:
      - type: volume
        source: pg-users-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgres-users/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
    environment:
      PGPORT: "${USER_DB_PORT}"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3

  parcel-pg:
    container_name: parcel-pg
    image: postgres:15
    user: postgres
    hostname: "${PARCEL_DB_HOSTNAME}"
    ports:
      - "${PARCEL_DB_PORT}:${PARCEL_DB_PORT}"
    volumes:
      - type: volume
        source: pg-parcels-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgres-parcels/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
    environment:
      PGPORT: "${PARCEL_DB_PORT}"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbit:
    container_name: rabbit
    image: rabbitmq:3.11-management
    hostname: "${RABBIT_MQ_HOSTNAME}"
    ports:
      - "${RABBIT_MQ_PORT}:${RABBIT_MQ_PORT}"
      - "15672:15672"
    volumes:
      - type: volume
        source: rabbit-data
        target: /var/lib/rabbitmq/mnesia
      - type: bind
        source: ./rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./rabbitmq/definitions.json
        target: /etc/rabbitmq/definitions.json

  parcel-discovery:
    container_name: parcel-discovery
    build: ../discovery/.
    ports:
      - "${DISCOVERY_PORT}:${DISCOVERY_PORT}"
    environment:
      PORT: "${DISCOVERY_PORT}"
      HOSTNAME: "${DISCOVERY_HOSTNAME}"

  gateway:
    depends_on:
      - parcel-discovery
      - user-service
      - parcel-service
    container_name: parcel-gateway
    build: ../gateway/.
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      DISCOVERY_URL: "http://${DISCOVERY_HOSTNAME}:${DISCOVERY_PORT}/eureka/"
      JWT_RSA_PUBLIC_KEY_PATH: "${JWT_RSA_PUBLIC_KEY_PATH}"
    volumes:
      - type: bind
        source: ./jwtRS256.key.pub
        target: "${JWT_RSA_PUBLIC_KEY_PATH}"

  user-service:
    depends_on:
      - rabbit
      - users-pg
      - parcel-discovery
    container_name: user-service
    build: ../user-service/.
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    environment:
      DISCOVERY_URL: "http://${DISCOVERY_HOSTNAME}:${DISCOVERY_PORT}/eureka/"
      JWT_RSA_PRIVATE_KEY_PATH: "${JWT_RSA_PRIVATE_KEY_PATH}"
      DB_URL: "jdbc:postgresql://${USER_DB_HOSTNAME}:${USER_DB_PORT}/userdb"
      DB_USERNAME: "${USER_DB_USER}"
      DB_PASSWORD: "${USER_DB_PASSWORD}"
      JWT_TOKEN_EXPIRY_MS: "${JWT_TOKEN_EXPIRY_MS}"
      RABBIT_MQ_HOSTNAME: "${RABBIT_MQ_HOSTNAME}"
      RABBIT_MQ_PORT: "${RABBIT_MQ_PORT}"
      RABBIT_MQ_USERNAME: "${RABBIT_MQ_USER_SERVICE_USERNAME}"
      RABBIT_MQ_PASSWORD: "${RABBIT_MQ_USER_SERVICE_PASSWORD}"
    volumes:
      - type: bind
        source: ./jwtRS256.key
        target: "${JWT_RSA_PRIVATE_KEY_PATH}"

  parcel-service:
    depends_on:
      - rabbit
      - parcel-pg
      - parcel-discovery
    container_name: parcel-service
    build: ../parcel-service/.
    ports:
      - "${PARCEL_SERVICE_PORT}:${PARCEL_SERVICE_PORT}"
    environment:
      DISCOVERY_URL: "http://${DISCOVERY_HOSTNAME}:${DISCOVERY_PORT}/eureka/"
      DB_URL: "jdbc:postgresql://${PARCEL_DB_HOSTNAME}:${PARCEL_DB_PORT}/parceldb"
      DB_USERNAME: "${PARCEL_DB_USER}"
      DB_PASSWORD: "${PARCEL_DB_PASSWORD}"
      RABBIT_MQ_HOSTNAME: "${RABBIT_MQ_HOSTNAME}"
      RABBIT_MQ_PORT: "${RABBIT_MQ_PORT}"
      RABBIT_MQ_USERNAME: "${RABBIT_MQ_PARCEL_SERVICE_USERNAME}"
      RABBIT_MQ_PASSWORD: "${RABBIT_MQ_PARCEL_SERVICE_PASSWORD}"

volumes:
  pg-users-data:
  pg-parcels-data:
  rabbit-data:
